version: '3.8'

networks:
  app_network:
    driver: bridge

services:
  postgres:
    image: postgres:latest
    networks:
      - app_network
    container_name: postgres
    healthcheck:
      test: [ "CMD-SHELL", "export PGPASSWORD=admin && pg_isready -U admin -d database" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: database
    ports:
      - "5432:5432"


  minio:
    image: minio/minio:latest
    networks:
      - app_network
    container_name: minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
    command: server data

  createbucket:
    image: minio/mc
    networks:
      - app_network
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: on-failure
    entrypoint: >-
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set local http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb local/app;
      exit 0;
      "
  
  fastapi_app:
    build: backend/.
    #image: fastapi_app_image
    networks:
      - app_network
    restart: always
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

  web_server:
    build: frontend/.
    networks:
      - app_network
    restart: always
    ports:
      - "80:80"
    